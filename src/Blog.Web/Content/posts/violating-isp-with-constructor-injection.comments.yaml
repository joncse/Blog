- Email: "landon.poch@gmail.com"
  Message: "<p>I wish all the programmers I'll ever have to work with would read this post and apply it.  This is a huge problem because it creates massively convoluted code.  For me, saying that this is an ISP violation is simply a more specific way of saying people are abusing scope.  If you don't need a dependency at the class level, then why is it there?</p><p>Why don't I just define everything as static and assume that everything depends on everything?  Because it's a tangled mess that's why.  The violation in your example is pretty much the same thing, just to a lesser degree.  The bottom line is, always keep variable scope as minimal as possible.  Great programmers have always been minimalists.</p><p>A couple of thoughts on IoC...</p><p>I agree that IoC isn't causing the problem here but it definitely is an accomplice.  Having the classes \"newed\" up automatically by the container makes these things easier to miss.  I've also seen performance problems occur when pulling a new instance of a class from the container because it has a bunch of needless dependencies.  You can avoid these problems though by just being careful and not abusing the power the container gives you.</p><p>I also enjoyed an article by  David Heinemeier Hansson where he explains why dependency injection is obsolete in dynamic languages.  <a href=\"http://david.heinemeierhansson.com/2012/dependency-injection-is-not-a-virtue.html\" rel=\"nofollow\">http://david.heinemeierhansson...</a>.  I agree with the idea that a pattern in one language might just be a feature that is built into the semantics of another language.</p><p>I've seen a lot of people put waaaaay too much weight behind dependency injection and ignore a lot of more important overarching principles like SRP, OCP, LSP, ISP and IoC.  Dependency injection isn't even a principle really.  It's more of an implementation detail of a principle called IoC.  I think a lot of times we focus on the wrong things and miss the really important programming concepts.  So many people are obsessed with the buzz words that they miss the underlying value.  Often programmers will use things that aren't necessary and be completely ignorant to other basic things that are arguably way more important.</p>"
  Name: "Landon Poch"
  When: "2013-10-11 04:51:41.000"
- Email: "disqus@wyldeye.com"
  Message: "<p>Excellent points. Thanks for the DHH link. One thing that egged me to write this post was stumbling across some FP threads which said things like \"and that leads to asinine things like TDD and IoC containers\".</p><p>To your point, if merely changing languages removes the need for a tool, maybe this isn't a core programming need at all but incidental complexity introduced by your language of choice.</p><p>But even then, can the problem be reshaped so that the tool isn't needed. If it hurts when you do that, don't do that. Don't make a tool to hurt yourself more efficiently.</p>"
  Name: "Kijana Woodard"
  When: "2013-10-11 15:07:08.000"

